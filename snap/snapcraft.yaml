name: cuda-samples
version: '0.1'
summary: Query CUDA device information
description: |
  Query CUDA device information using a snap.

grade: stable
confinement: strict
architectures: [amd64]

apps:
  cuda-samples:
    command: bin/run-cuda-sample.sh
    plugs:
      - opengl
      - cuda-support
      - hardware-observe
      - network-bind
      - home
      - x11


parts:
  scripts:
    plugin: dump
    source: .
    stage:
      - bin/*
  sample-programs:
    after: [cuda-build-deps]
    plugin: make
    source: .
    stage-packages:
      - freeglut3-dev
      - libx11-dev
      - libxmu-dev
      - libxi-dev
      - libgl1-mesa-glx
      - libglu1-mesa
      - libglu1-mesa-dev
      - libglfw3-dev
      - libgles2-mesa-dev
    build-packages:
      - mpich
    override-build: |
      ./build_all_cuda_examples.sh
  cuda-build-deps:
    plugin: nil
    prime:
      - usr/lib/x86_64-linux-gnu/
      - usr/local/cuda-9.1/targets/x86_64-linux/lib
    build-packages:
      - wget
    override-build: |
      # download cuda installer
      wget -c \
        -O cuda-repo-ubuntu1604-9-1-local_9.1.85-1_amd64.deb \
        https://developer.nvidia.com/compute/cuda/9.1/Prod/local_installers/cuda-repo-ubuntu1604-9-1-local_9.1.85-1_amd64
      # patch 1
      wget -c \
        -O cuda-repo-ubuntu1604-9-1-local-cublas-performance-update-1_1.0-1_amd64.deb \
        https://developer.nvidia.com/compute/cuda/9.1/Prod/patches/1/cuda-repo-ubuntu1604-9-1-local-cublas-performance-update-1_1.0-1_amd64
      # compiler patch 1
      wget -c \
        -O cuda-repo-ubuntu1604-9-1-local-compiler-update-1_1.0-1_amd64.deb \
        https://developer.nvidia.com/compute/cuda/9.1/Prod/patches/2/cuda-repo-ubuntu1604-9-1-local-compiler-update-1_1.0-1_amd64
      # patch 3
      wget -c \
        -O cuda-repo-ubuntu1604-9-1-local-cublas-performance-update-3_1.0-1_amd64.deb \
        https://developer.nvidia.com/compute/cuda/9.1/Prod/patches/3/cuda-repo-ubuntu1604-9-1-local-cublas-performance-update-3_1.0-1_amd64
      # install the cuda toolkit
      dpkg -i cuda-repo-ubuntu1604-9-1-local_9.1.85-1_amd64.deb
      sudo apt-key add /var/cuda-repo-9-1-local/*.pub
      apt update
      apt install cuda -y -qq || true
      dpkg -i cuda-repo-ubuntu1604-9-1-local-cublas-performance-update-1_1.0-1_amd64.deb
      dpkg -i cuda-repo-ubuntu1604-9-1-local-compiler-update-1_1.0-1_amd64.deb
      dpkg -i cuda-repo-ubuntu1604-9-1-local-cublas-performance-update-3_1.0-1_amd64.deb
      # make directories for libcuda installation
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/lib/x86_64-linux-gnu
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/local/cuda-9.1/targets/x86_64-linux/lib
      # install libcuda to the snap
      cp /usr/lib/x86_64-linux-gnu/libcuda.so.1 $SNAPCRAFT_PART_INSTALL/usr/lib/x86_64-linux-gnu/libcuda.so.1
      cp /usr/lib/x86_64-linux-gnu/libcuda.so $SNAPCRAFT_PART_INSTALL/usr/lib/x86_64-linux-gnu/libcuda.so
      cp /usr/local/cuda-9.1/targets/x86_64-linux/lib/libcudart.so.9.1 $SNAPCRAFT_PART_INSTALL/usr/local/cuda-9.1/targets/x86_64-linux/lib/libcudart.so.9.1
      cp /usr/local/cuda-9.1/targets/x86_64-linux/lib/libcudart.so $SNAPCRAFT_PART_INSTALL/usr/local/cuda-9.1/targets/x86_64-linux/lib/libcudart.so
      # stage the examples
      /usr/local/cuda-9.1/bin/cuda-install-samples-9.1.sh $SNAPCRAFT_STAGE

